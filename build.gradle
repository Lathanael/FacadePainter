buildscript {
    repositories {
        jcenter()
        maven { url = "https://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.


version = version_major + '.' + version_minor + '.' + version_patch
group = "de.lathanael.facadepainter"
archivesBaseName = "FacadePainter-" + minecraft_version

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = minecraft_version + "-" + forge_version
    runDir = "run"

    mappings = "stable_39"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
    replaceIn "ExampleMod.java"
    replace "@VERSION@", project.version
	//replace "@UPDATE@", update_json
}

repositories {
	maven { // JEI & Tinkers
        name 'DVS1 Maven FS'
        url 'http://dvs1.progwml6.com/files/maven'
    }
    maven { // EnderCore
        name = "tterrag maven"
        url = "http://maven.tterrag.com" 
    }
    maven { // EnderIO & AutoSave/Config
        name 'tterrag maven2'
        url 'https://maven2.tterrag.com'
    }
    maven { // HWYLA
        name 'TehNuts WAILA fork'
        url 'https://tehnut.info/maven'
    }
}

dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //runtime "some.group:artifact:version"
    //deobfCompile "some.group:artifact:version:classifier"
    //provided "some.group:artifact:version:classifier"

    // JEI
    deobfProvided "mezz.jei:jei_${minecraft_version}:${jei_version}:api"
    runtime "mezz.jei:jei_${minecraft_version}:${jei_version}"

    // AutoSave/Config
    runtime "info.loenwind.autosave:AutoSave:${minecraft_version}-${autosave_version}"
    runtime "info.loenwind.autoconfig:AutoConfig:${minecraft_version}-${autoconfig_version}"

    // EnderCore
    runtime "com.enderio.core:EnderCore:${minecraft_version}-${ec_version}"

    // Ender IO
    compile "com.enderio:EnderIO:${minecraft_version}-${eio_version}"

    // HWYLA
    runtime "mcp.mobius.waila:Hwyla:${hwyla_version}_${minecraft_version}"
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}